---
import BaseLayout from "src/layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import FAQ from "@components/FAQ.astro";
import { getCollection } from "astro:content";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import {getOptimizedImage,getOptimizedCardImage} from "@js/utils"
import landingImage from "@assets/images/hero.webp" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
import Hero from "@components/hero/Hero2.astro";
// import Hero from "@components/Hero.astro";
import Products from "@components/Products.vue";


import '@shoelace-style/shoelace/dist/components/button/button.js';

const optimizedImage = await getOptimizedImage(landingImage)

const products = await getCollection("pcs");
const productsProcessedImages = await processProductImages(products)


async function processProductImages(products) {
  // Input validation
  if (!Array.isArray(products)) {
    throw new TypeError('Products must be an array');
  }
  
  const processedImages = {};
  
  try {
    // Use Promise.all to properly wait for all async operations to complete
    await Promise.all(
      products.map(async ({ id, data }) => {
        if (!id || !data?.image) {
          console.warn(`Skipping product with invalid data: ${id}`);
          return;
        }
        
        try {
          // Optimize the main image
          const optimizedMainImage = await getOptimizedCardImage(data.image);
          
          // Store the optimized image in the result object
          processedImages[id] = {
            image: optimizedMainImage
          };
        } catch (imageError) {
          console.error(`Failed to optimize image for product ${id}:`, imageError);
          // Store a placeholder or fallback for failed images
          processedImages[id] = {
            image: null,
            error: 'Image optimization failed'
          };
        }
      })
    );
    
    return processedImages;
  } catch (error) {
    console.error('Error processing product images:', error);
    throw new Error('Failed to process product images: ' + error.message);
  }
}

// Flag to track if data is ready
const dataIsReady = products && productsProcessedImages;



const title = "Puissance. Performance. Mobilité."; // "Mobility and Performance, Combined"
const description = "MacBooks, tablettes, PC portables haut de gamme , tout est chez Laptop Spirit";
// const heroImg = {src:"https://assets.nintendo.com/image/upload/f_auto/q_auto/dpr_1.5/ccb3e8ca3c296e21a8c933e8369031511589d0ef6b079cf5bb3667b09893482c/features/mode-3"}
const heroImg = {src:"https://images.unsplash.com/photo-1588620353536-ded12e518f45?q=80&w=870&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}
const serviceImg = {src:"https://images.unsplash.com/photo-1610465299996-30f240ac2b1c?q=80&w=870&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}
const cta = "Découvrir les appareils"

// const service1_title = "58 Wilaya Shipping"
// const service1_description = "Fast and reliable delivery to all 58 provinces. Your new phone is just a click away."
// const service2_title = "Garentie 3 mois"
// const service2_description = "Not satisfied? Return your phone within 30 days, no questions asked."

const service1_title = "Livraison dans les 58 Wilayas"
const service1_description = "Rapide et fiable partout en Algérie. Votre nouvel appareil n’est qu’à un clic."

const service2_title = "Garantie 3 mois"
const service2_description = "Pas satisfait ? Retournez votre appareil sous 30 jours, sans poser de questions."



---



<BaseLayout
  title="Page d'accueil"
  description="Majd Studios Template"
  preloadedImage = {optimizedImage}
>

<Hero
  title={title}
  description={description}
  heroImg={heroImg}
  serviceImg={serviceImg}
  cta={cta}
  service1_title={service1_title}
  service1_description={service1_description}
  service2_title={service2_title}
  service2_description={service2_description}
/>


<!-- products -->
{dataIsReady ? (
  <Products 
    client:only="vue" 
    products={products} 
    productImages={productsProcessedImages} 
    isSection={true} 
  />
) : (
  <div class="loading-state">Loading products...</div>
)}



 
  <!-- ============================================ -->
  <!--                    FAQ                       -->
  <!-- ============================================ -->
<!-- <FAQ /> -->



</BaseLayout>



<style lang="less">
  



</style>

---
import data from "@data/client.json";
import navData from "@data/navData.json";
import logo from "@assets/images/logo.png";
import PluginBanner from "@components/TemplateComponents/PlugBanner.astro"
import { Icon } from 'astro-icon/components';
import DarkModeToggle from "@components/DarkModeToggle.astro";
import AmButton from "./AmButton.vue";
import CartToggle from "@components/CartComponents/CartToggle.vue";


const {whatsappLink,free} = data
const googleMapsLink = data.address.mapLink

// config
const showCart = true
const showNav = true
const showDarkModeToggle = false

// const ctaButton = "تفضل بزيارتنا"
const ctaButton = "Viens nous voir"

// const contactButton = "تواصل معنا"
const contactButton = "Contact"




---

<!-- ================Navigation ======= -->


<header id="cs-navigation">
<div class="banner">
  <PluginBanner />
</div>
  <div class="cs-container">
    <!--Nav Logo-->
    <a href="/" class="cs-logo" aria-label="back to home">
      <!-- logo as text -->
      <!-- <h1 class="logo-text font-logo text-center">INFO Pc SBA</h1> -->

      <!-- logo as image -->
      <img class="logo-image" src={logo.src} alt="logo">
      
    </a>




    <!-- navbar CTA -->
    <AmButton
>
      <Icon name="mdi--location" slot="icon-start" />
      {ctaButton}
    </AmButton>


    
    <a href={whatsappLink} target="_blank" class="cs-button-solid cs-nav-button whatsapp-bg">
      <!-- <Icon name={"mage--location-fill"} size={"35px"} /> -->
      <svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" viewBox="0 0 24 24">
        <path fill="currentColor" d="M21.99 6.547a11 11 0 0 0-.103-1.282a4.3 4.3 0 0 0-.363-1.09A3.85 3.85 0 0 0 19.83 2.48a4.3 4.3 0 0 0-1.083-.362a11 11 0 0 0-1.292-.105c-.183-.007-.42-.01-.53-.01L7.077 2c-.11 0-.347.003-.53.01a11 11 0 0 0-1.282.103a4.3 4.3 0 0 0-1.09.363A3.85 3.85 0 0 0 2.48 4.17a4.3 4.3 0 0 0-.362 1.083a11 11 0 0 0-.106 1.292c-.006.183-.01.42-.01.53L2 16.923c0 .11.003.347.01.53a11 11 0 0 0 .103 1.282a4.3 4.3 0 0 0 .363 1.09A3.85 3.85 0 0 0 4.17 21.52a4.3 4.3 0 0 0 1.083.362a11 11 0 0 0 1.292.105c.183.007.42.01.53.01l9.848.002c.11 0 .347-.003.53-.01a11 11 0 0 0 1.282-.103a4.3 4.3 0 0 0 1.09-.363a3.85 3.85 0 0 0 1.696-1.694a4.3 4.3 0 0 0 .362-1.083a11 11 0 0 0 .106-1.292c.006-.183.01-.42.01-.53L22 7.077c0-.11-.003-.347-.01-.53m-9.773 12.41h-.003a7.1 7.1 0 0 1-3.407-.868l-3.78.991l1.012-3.693a7.13 7.13 0 1 1 6.178 3.57" />
        <path fill="currentColor" d="M12.22 5.901a5.927 5.927 0 0 0-5.023 9.076l.141.224l-.599 2.186l2.243-.588l.216.128a5.9 5.9 0 0 0 3.016.826h.003A5.926 5.926 0 0 0 12.219 5.9Zm3.484 8.47a1.83 1.83 0 0 1-1.202.847a2.44 2.44 0 0 1-1.122-.07a10 10 0 0 1-1.015-.376a7.94 7.94 0 0 1-3.043-2.689a3.46 3.46 0 0 1-.728-1.842a2 2 0 0 1 .624-1.485a.66.66 0 0 1 .475-.223c.118 0 .237 0 .341.006c.11.005.256-.042.4.306c.15.356.506 1.233.55 1.322a.33.33 0 0 1 .015.312a1.2 1.2 0 0 1-.178.297c-.09.104-.187.232-.267.312c-.09.089-.182.185-.079.363a5.4 5.4 0 0 0 .991 1.234a4.9 4.9 0 0 0 1.433.884c.178.09.282.074.386-.045s.445-.52.564-.698s.237-.148.4-.089s1.04.49 1.218.58s.297.133.341.207a1.5 1.5 0 0 1-.104.847" />
      </svg>
      {contactButton}
    </a>

    
    {showCart && <CartToggle client:only />}
    <!--Dark Mode toggle: remove component if you don't want to enable a dark mode toggle-->
    {showDarkModeToggle && <DarkModeToggle />}

    

        <!--Navigation List-->
       { showNav &&
        <nav class="cs-nav" role="navigation">
          <!--Mobile Nav Toggle-->
          <button class="cs-toggle" id="mobile-menu-toggle" aria-expanded="false" aria-controls="cs-expanded-ul" aria-label="Toggle mobile menu.">
            <div class="cs-box" aria-hidden="true">
              <span class="cs-line cs-line1" aria-hidden="true"></span>
              <span class="cs-line cs-line2" aria-hidden="true"></span>
              <span class="cs-line cs-line3" aria-hidden="true"></span>
            </div>
          </button>
          
          <!-- If you want to use another navigation stitch and enjoy the benefits of dynamic routing, replace the .cs-ul-wrapper in the navigation stitch with this one below -->
          <div class="cs-ul-wrapper">
            <ul id="cs-expanded-ul" class="cs-ul">
              {navData.map((entry) => (
                <li
                  class:list={[
                    "cs-li",
                    { "cs-dropdown": entry.children?.length > 0 },
                  ]} 
                >
                  {entry.children?.length > 0 ? (
                    // If entry has children in navData.json, create a button and a dropdown icon
                    <button
                    aria-expanded="false"
                    aria-controls={`submenu-${entry.key}`}
                      class:list={[
                        "cs-li-link cs-dropdown-button",
                        { "cs-active": Astro.url.pathname.includes(entry.url)},
                      ]}
                    >
                      {entry.key}
                      <Icon name="mdi--caret" class="cs-drop-icon" />
                    </button>
                  ) : (
                    // If entry does not have children in navData.json, create an anchor
                    <a
                      href={entry.url}
                      class:list={[
                        "cs-li-link",
                        { "cs-active": Astro.url.pathname === entry.url },
                      ]}
                      aria-current={Astro.url.pathname === entry.url ? "page" : undefined}
                    >
                      {entry.key}
                    </a>
                  )}
                  
                  {/* {entry.children?.length > 0 && (
                    // If entry has children in navData.json, create a drop down menu
                    <ul id={`submenu-${entry.key}`} class="cs-drop-ul">
                      {entry.children.map((child) => (
                        <li class="cs-drop-li">
                          <a 
                            href={child.url} 
                            class="cs-li-link cs-drop-link"
                            aria-current={Astro.url.pathname === child.url ? "page" : undefined}
                          >
                            {child.key}
                          </a>
                        </li>
                      ))}
                    </ul>
                  )} */}
                </li>
              ))}
            </ul>
          </div>
        </nav>
        }





  </div>
</header>

<style lang="less">
.logo-text{
  color: white !important;
  font-size: 12px;
}
.header-cta-button{
  font-weight: bold;
  font-size: 0.9em;
  transform: translateY(4px);
}
/*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/

/* Mobile - 1023px */
@media only screen and (max-width: 63.9375rem) {
  body {
    &.cs-open {
      overflow: hidden;
    }
  }
  .header-cta-button{
    display: none;
  }
  #cs-navigation {
    letter-spacing: 1px;
    width: 100%;


    /* prevents padding from affecting height and width */
    box-sizing: border-box;

    background-color: #fff;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    position: fixed;
    z-index: 50;


    &:before {
      /* black blurred overlay */
      content: "";
      width: 0%;
      height: 100vh;
      background: rgba(0, 0, 0, 0.6);
      opacity: 0;
      display: block;
      position: absolute;
      top: 100%;
      right: 0;
      z-index: -11;
      transition: width 0.5s, opacity 0.3s;
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
    }

    &.cs-active {

      &:before {
        width: 100%;
        opacity: 1;
      }

      .cs-ul-wrapper {
        opacity: 1;
        visibility: visible;
        transform: scaleX(1);
        transition-delay: 0.2s;
      }

      .cs-li {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .cs-container {
      padding: (8/16rem) (16/16rem);
      width: 100%;
      display: flex;
      justify-content: flex-end;
      align-items: center;
    }

    .cs-logo {
      width: fit-content;
      max-width: (146/16rem);
      height: 50px;
      margin: 0 8px 0 0;
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 10;

      margin-inline-end: auto;
      img {
        width: 100%;
        height: 100%;
        /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
        object-fit: contain;
        /* places the image to the left edge of the parent */
        object-position: left;
        transform: scale(1.2);
      }

      .logo-text{
        font-size: 19px;
      }
    }

    .cs-toggle {
      /* 44px - 48px */
      width: clamp(2.75rem, 6vw, 3rem);
      height: clamp(2.75rem, 6vw, 3rem);
      margin: 0 0 0 auto;
      background-color: transparent;
      border: none;
      border-radius: (4/16rem);
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .cs-active {
      .cs-line1 {
        top: 50%;
        transform: translate(-50%, -50%) rotate(225deg);
      }

      .cs-line2 {
        top: 50%;
        transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
        transform-origin: center;
      }

      .cs-line3 {
        opacity: 0;
        bottom: 100%;
      }
    }

    .cs-box {
      /* 24px - 28px */
      width: clamp(1.5rem, 2vw, 1.75rem);
      /* 14px - 16px */
      height: clamp(0.875rem, 1.5vw, 1rem);
      position: relative;
    }

    .cs-line {
      width: 100%;
      height: 2px;
      background-color: #1a1a1a;
      border-radius: 2px;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }

    .cs-line1 {
      top: 0;
      transition: transform 0.5s, top 0.3s, left 0.3s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
      transform-origin: center;
    }

    .cs-line2 {
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
      transition: top 0.3s, left 0.3s, transform 0.5s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
    }

    .cs-line3 {
      bottom: 0;
      transition: bottom 0.3s, opacity 0.3s;
    }

    .cs-ul-wrapper {
      height: 100vh;
      background-color: #fff;
      opacity: 0;
      visibility: hidden;
      position: absolute;
      top: 100%;
      right: 0;
      left: auto;
      z-index: -1;
      overflow: hidden;
      transform: scaleX(0);
      transition: transform 0.4s, opacity 0.3s;
      transform-origin: top right;
    }

    .cs-ul {
      width: auto;
      min-width: 40%;
      height: 65vh;
      margin: 0;
      /* 28px - 40px */
      padding: (48/16rem) clamp(1.75rem, 3vw, 2.5rem) (32/16rem) (70/16rem);
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-end;
      gap: (20/16rem);
      overflow: scroll;
    }

    .cs-li {
      text-align: right;
      list-style: none;
      width: 100%;
      margin-right: 0;
      opacity: 0;
      /* transition from these values */
      transform: translateX(-40/16rem);
      transition: transform 0.6s, opacity 0.9s;

      &:nth-of-type(1) {
        transition-delay: 0.05s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.15s;
      }
      &:nth-of-type(4) {
        transition-delay: 0.2s;
      }
      &:nth-of-type(5) {
        transition-delay: 0.25s;
      }
      &:nth-of-type(6) {
        transition-delay: 0.3s;
      }
      &:nth-of-type(7) {
        transition-delay: 0.35s;
      }
      &:nth-of-type(8) {
        transition-delay: 0.4s;
      }
      &:nth-of-type(9) {
        transition-delay: 0.45s;
      }
    }

    .cs-li-link {
      /* 16px - 24px */
      font-size: clamp(1rem, 2.5vw, 1.5rem);
      color: inherit;
      line-height: 1.2em;
      text-decoration: none;
      margin: 0;
      display: inline-block;
      position: relative;

      &:before {
        /* active state underline */
        content: "";
        width: 100%;
        height: 1px;
        background: currentColor;
        opacity: 1;
        display: none;
        position: absolute;
        bottom: (-2/16rem);
        left: 0;
      }

      &.cs-active {
        &:before {
          display: block;
        }
      }
    }

    .cs-button-solid {
      display: none;
    }
  }
}

/* Dark Mode */
@media only screen and (max-width: 63.9375rem) {
  body.dark-mode {
    #cs-navigation {
      background-color: var(--dark);

      .cs-logo {
        /* makes it white */
        filter: grayscale(1) brightness(1000%);
      }

      .cs-line {
        background-color: #fff;
      }

      .cs-ul-wrapper {
        background-color: var(--medium);
      }

      .cs-li-link {
        color: var(--bodyTextColorWhite);
      }
    }
  }
}

/*-- -------------------------- -->
<---     Navigation Dropdown    -->
<--- -------------------------- -*/

/* Mobile - 1023px */
@media only screen and (max-width: 1023px) {
  #cs-navigation {
    .cs-dropdown {
      color: var(--bodyTextColorWhite);
      color: var(--headerColor);
      position: relative;

      &.cs-active {
        .cs-drop-ul {
          height: auto;
          margin: (12/16rem) 0 0 0;
          padding: (24/16rem);
          opacity: 1;
          visibility: visible;
          transform: scale(1);
        }

        .cs-drop-link {
          opacity: 1;
        }

        .cs-drop-icon {
          transform: rotate(0);
        }
      }

      .cs-li-link {
        position: relative;
        transition: opacity 0.3s;
      }

    }

    .cs-drop-icon {
      width: (15/16rem);
      height: auto;
      display: inline-block;
      color: inherit;
      transform: rotate(180deg);
      transition: 0.3s;
    }

    .cs-drop-ul {
      width: 100%;
      height: 0;
      margin: 0;
      box-sizing: border-box;
      padding: 0 (24/16rem) 0 (24/16rem);
      background-color: var(--primary);
      opacity: 0;
      display: flex;
      visibility: hidden;
      flex-direction: column;
      justify-content: flex-start;
      align-items: flex-end;
      gap: (12/16rem);
      overflow: hidden;
      transform: scale(0);
      transition: padding 0.3s, margin 0.3s, height 0.3s, opacity 0.3s,
        transform 0.3s, visibility 0.3s;
      transform-origin: top right;
    }

    .cs-drop-li {
      text-align: inherit;
      list-style: none;
    }

    .cs-li-link {
      &.cs-drop-link {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 2vw, 1.25rem);
        color: #fff;
      }
    }

    .cs-dropdown-button {
      background-color: transparent;
      border: none;
      appearance: none;
    }
  }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    .cs-dropdown {
      position: relative;
      &:hover,
      &.cs-active {
        cursor: pointer;
        .cs-drop-ul {
          opacity: 1;
          visibility: visible;
          transform: scaleY(1);
        }

        .cs-drop-li {
          opacity: 1;
          transform: translateY(0);
        }
      }
    }

    .cs-dropdown:has(.cs-drop-icon) {
      display: flex;
      align-items: center;
      &:hover {
        .cs-drop-icon {
        transform: rotate(0);
        }
      }
    }


    .cs-drop-icon {
      width: (15/16rem);
      height: auto;
      display: inline-block;
      color: inherit;
      transform: rotate(180deg);
      transition: 0.3s;
      
    }

    .cs-drop-ul {
      min-width: (200/16rem);
      margin: 0;
      padding: 0;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 10px 16px;
      opacity: 0;
      border-bottom: 5px solid var(--primary);
      visibility: hidden;
      /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
      // columns: 2;
      position: absolute;
      top: 100%;
      z-index: -100;
      overflow: hidden;
      transform: scaleY(0);
      transition: transform 0.3s, visibility 0.3s, opacity 0.3s;
      transform-origin: top;
    }

    .cs-drop-li {
      font-size: (16/16rem);
      text-decoration: none;
      list-style: none;
      width: 100%;
      height: auto;
      color: var(--bodyTextColor);
      opacity: 0;
      display: block;
      transform: translateY(-10/16rem);
      transition: opacity 0.6s, transform 0.6s;

      &:nth-of-type(1) {
        transition-delay: 0.05s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.15s;
      }
      &:nth-of-type(4) {
        transition-delay: 0.2s;
      }
      &:nth-of-type(5) {
        transition-delay: 0.25s;
      }
      &:nth-of-type(6) {
        transition-delay: 0.3s;
      }
      &:nth-of-type(7) {
        transition-delay: 0.35s;
      }
      &:nth-of-type(8) {
        transition-delay: 0.4s;
      }
      &:nth-of-type(9) {
        transition-delay: 0.45s;
      }
      &:nth-of-type(10) {
        transition-delay: 0.5s;
      }
      &:nth-of-type(11) {
        transition-delay: 0.55s;
      }
      &:nth-of-type(12) {
        transition-delay: 0.6s;
      }
      &:nth-of-type(13) {
        transition-delay: 0.65s;
      }
    }

    .cs-li-link {
      &.cs-drop-link {
        font-size: (16/16rem);
        line-height: 1.5em;
        text-decoration: none;
        white-space: nowrap;
        width: 100%;
        /* prevents padding from affecting height and width */
        box-sizing: border-box;
        padding: (12/16rem);
        color: var(--bodyTextColor);
        display: block;
        transition: color 0.3s, background-color 0.3s;

        &:hover {
          background-color: #f7f7f7;
        }

        &:focus-within {
          outline: 2px solid currentColor;
          outline-offset: -2px;
        }

        &:before {
          display: none;
        }
      }
    }

    .cs-dropdown-button {
      background-color: transparent;
      border: none;
      appearance: none;
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #cs-navigation {
      .cs-drop-ul {
        background-color: var(--dark);
      }

      .cs-li-link {
        &.cs-drop-link {
          &:hover {
            background-color: var(--medium);
          }
        }
      }

      .cs-drop-icon {
        /* turns it white */
        filter: grayscale(1) brightness(1000%);
      }
    }
  }
}

/*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #cs-navigation {
    width: 100%;
    min-height: 76px !important;

    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    background-color: #fff;
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    position: fixed;
    z-index: 10000;

    // display: flex;
    // align-items: center;

    .cs-container {
    padding: 0 (16/16rem);
      width: 100%;
      max-width: (1280/16rem);
      margin: auto;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: (24/16rem);
    }

    .cs-toggle {
      display: none;
    }

    .cs-logo {
      margin-inline-end: auto;

      width: 18.4%;
      max-width: (350/16rem);
      height: (65/16rem);
      /* margin-right auto pushes everything away from it to the right */

      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 100;

      img {
        width: 100%;
        height: 100%;
        /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
        object-fit: contain;
        object-position: left;

      }
    }

    .cs-ul {
      width: 100%;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      /* 20px - 36px */
      gap: clamp(1.25rem, 2.6vw, 2.25rem);
    }

    .cs-li {
      list-style: none;
      padding: (32/16rem) 0;
      /* prevent flexbox from squishing it */
      flex: none;
    }

    .cs-li-link {
      /* 14px - 16px */
      // font-size: clamp(0.875rem, 1vw, 1rem);
      font-size: 18px ;
      line-height: 1.5em;
      text-decoration: none;
      margin: 0;
      color: var(--bodyTextColor);
      display: block;
      position: relative;
      &:hover {
        &:before {
          width: 100%;
        }
      }

      &.cs-active {
        &:before {
          width: 100%;
        }
      }

      &:before {
        /* active state underline */
        content: "";
        width: 0%;
        height: 2px;
        background: var(--primary);
        opacity: 1;
        display: block;
        position: absolute;
        bottom: (0/16rem);
        left: 0;
        transition: width 0.3s;
      }
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 64rem) {
  body.dark-mode {

    #cs-navigation {
      background-color: var(--dark);
      box-shadow: none;

      .cs-logo {
        /* makes it turn white */
        filter: grayscale(1) brightness(1000%);
      }
      .cs-nav-button{
        color: white;
      }
      .cs-nav-button:hover,.cs-nav-button:focus{
        color: var(--whatsapp);
      }
      .cs-li-link {
        color: var(--bodyTextColorWhite);
      }

      .cs-li-link {
        &:before {
          background-color: var(--color-primary-500);

        }
      }
    }
  }
}

.cs-li-link.cs-active{
  font-weight: bolder;
}
.cs-nav-button{
  background-color: transparent !important;
}


</style>
